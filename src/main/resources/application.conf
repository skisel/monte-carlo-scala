akka {
  loglevel = INFO
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    deployment {
      /partitioningActor/runningActorRouter {
        router = round-robin
        nr-of-instances = 100
        cluster {
          enabled = on
          max-nr-of-instances-per-node = 1
          allow-local-routees = off
          use-role = compute
        }
      }
    }
  }
  remote {
    log-remote-lifecycle-events = off
    transport-failure-detector.heartbeat-interval = 10 s
    transport-failure-detector.acceptable-heartbeat-pause = 60 s
    transport-failure-detector.min-std-deviation = 30 s
    maximum-payload-bytes = 10000000b
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = ["akka.tcp://ClusterSystem@127.0.0.1:2551"]
    log-info = off
    auto-down = on
    failure-detector.heartbeat-interval = 10 s
    failure-detector.acceptable-heartbeat-pause = 60 s
    failure-detector.min-std-deviation = 30 s
  }
}

atmos {
    trace {
      enabled = true                # enable tracing
      #node = AwesomeApplication     # give this node a name

      traceable {
        "*"               = on
      }

      sampling {
        "*" = 1
      }
    }
}

monte-carlo-scala {
    partition.size = 1000
    distribution.resolution = 1000
    db {
        uri = "remote:localhost/mc"
        username = "admin"
        password = "admin"
    }
}


akka.actor.deployment {
  /singleton/leader/nodeRouter {
    router = round-robin
    nr-of-instances = 100
    cluster {
      enabled = on
      max-nr-of-instances-per-node = 1
      allow-local-routees = off
      use-role = compute
    }
  }
}
